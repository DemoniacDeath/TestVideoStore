@model Example.MVC.ViewModels.Customer

@using (Ajax.BeginForm("Statement", null, new AjaxOptions { UpdateTargetId = "statement" }, new { @id = "customer_form" }))
{
    @Html.AntiForgeryToken()

    @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label" })
    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
    <div id="rentals_container">
        @Html.LabelFor(model => model.Rentals, htmlAttributes: new { @class = "control-label" })
        @Html.EditorFor(model => model.Rentals, new { htmlAttributes = new { @class = "form-control" } })
    </div>
    <input id="load_statement_button" type="submit" value="Посчитать" class="btn btn-default" />
}

<hr />

<div id="statement"></div>

@section scripts
{
    <script type="text/javascript">
        $(function () {
            var movies = @Html.Raw(@Json.Encode(ViewBag.MoviesList));
            var movieTypes = @Html.Raw(@Json.Encode(ViewBag.MovieTypesList));
            var newRentalUrl = "@Url.Action("GetNewRental", "Home")";
            var statementUrl = "@Url.Action("Download", "Home")";
            function showMovieType(movieSelect)
            {
                var movieType = "";
                if (movieSelect.val())
                {
                    for (var i in movies)
                    {
                        if (movies[i].MovieID == movieSelect.val())
                        {
                            movieType = movieTypes[movies[i].Type];
                        }
                    }
                }
                movieSelect.parents('.rental-container').find('.movie-type').val(movieType);
            }
            function addNewRentalIfNeeded()
            {
                var noEmpty = true;
                $('.title-select').each(function () {
                    if (!$(this).val()) {
                        noEmpty = false;
                    }
                });
                if (noEmpty)
                {
                    $.ajax(newRentalUrl, {
                        data: {
                            Count: $('.title-select').size()
                        },
                        success: function (result) {
                            $('#rentals_container').append(result);
                        }
                    })
                }
            }
            $('.title-select').each(function(){
                showMovieType($(this));
            });
            $("#rentals_container").on("change", ".title-select", function () {
                addNewRentalIfNeeded();
                showMovieType($(this));
                if ($('#Name').val())
                    $('#customer_form').submit();
            });
            $('#statement').on("click", "#download_statement_button", function(){
                var url = statementUrl;
                var formData = $('#customer_form').serialize();
                url += "?" + formData;
                window.location.assign(url);
            });
        });
    </script>
}
